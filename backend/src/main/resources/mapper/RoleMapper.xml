<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.hongjian.oa.mapper.RoleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="tech.hongjian.oa.entity.Role">
        <result column="id" property="id" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <result column="name" property="name" />
        <result column="description" property="description" />
        <result column="key" property="key" />
        <result column="sort" property="sort" />
        <result column="status" property="status" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        `id`,
        `created_at`,
        `updated_at`,
        `name`, `description`, `key`, `sort`, `status`
    </sql>
    
    <select id="findUserRoles" resultMap="BaseResultMap">
        select
        r.*
        from `role` r, `user_role_rel` ur
        where r.id = ur.role_id and ur.user_id=#{userId} and r.status!=0
        order by r.sort
    </select>
    <select id="findRoles" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from `role`
        <where>
            <if test="name != null">and `name` like #{name}</if>
            <if test="key != null">and `key` like #{key}</if>
            <if test="status != null">and `status` = #{status}</if>
        </where>
        order by `sort`
    </select>
    <select id="findSelectTreeChecked" resultType="java.lang.Integer">
        select
          r.menu_id
        from `role_menu_rel` r left join `menu` m on r.menu_id=m.id
        where r.role_id=#{roleId} and not exists (select * from `menu` where parent_id=m.id)
    </select>


    <sql id="whereByParamMap">
        <where>
            <if test="id != null">
                and r.id=#{id}
            </if>
            <if test="ids != null and !ids.isEmpty()">
                and r.id in <foreach item="item" collection="ids" open="(" separator="," close=")">#{item}</foreach>
            </if>
            <if test="name != null">
                and r.name=#{name}
            </if>
            <if test="nameLike != null">
                and r.nameLike like #{nameLike}
            </if>
        </where>
    </sql>

    <select id="countByParamMap" resultType="java.lang.Long">
        select *
        from `role` r
        <include refid="whereByParamMap" />
    </select>
    <select id="selectByParamMap" resultType="tech.hongjian.oa.entity.Role">
        select *
        from `role` r
        <include refid="whereByParamMap" />
        <if test="orderBy != null">
            order by ${orderBy} <if test="direction != null">${direction}</if>
        </if>
    </select>
    <select id="selectByParamMapPage" resultType="tech.hongjian.oa.entity.Role">
        select *
        from `role` r
        <include refid="whereByParamMap" />
        <if test="orderBy != null">
            order by ${orderBy} <if test="direction != null">${direction}</if>
        </if>
    </select>

</mapper>
